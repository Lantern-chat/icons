function kebabCase(s) {
    return s
        .replace(/([a-z])([A-Z])/g, "$1-$2")
        .replace(/[\s_]+/g, '-')
        .toLowerCase();
}

const icons = require('./src/icons.json');

const fs = require("fs"),
    path = require('path');
svgstore = require("svgstore"),
    svgo = require('svgo');

let sprites = svgstore();
let enum_template = '';
let export_template = '';

for(let key in icons) {
    let kebab = kebabCase(key);

    sprites.add(kebab, fs.readFileSync(path.join('./src/', icons[key]), 'utf8'));

    enum_template += `    ${key} = "${kebab}",\n`;
    export_template += `export { default as ${key}Icon } from "${icons[key]}";\n`;
}

let compiled_svg = sprites.toString()
    .replace(/path\s+id=".*?"/g, 'path') // remove all path ids
    .replace(/<!--.*?-->/g, '') // remove all comments
    ;

compiled_svg = svgo.optimize(compiled_svg, {
    path: './src/icons.svg',
    multipass: true,
    plugins: [
        {
            name: 'preset-default',
            params: {
                overrides: {
                    // keep symbols
                    removeUselessDefs: false,
                    // keep symbol ids
                    cleanupIDs: false,
                },
            },
        },
        'reusePaths'
    ],
}).data;

fs.writeFileSync('./src/icons.svg', compiled_svg);

fs.writeFileSync('./src/index.ts', `
/*
 * This file is autogenerated by gen.js and any changes to it will be overwritten.
 **/

import icons_path from "./icons.svg";
export const path = icons_path;

export const enum Icons {
${enum_template}}

${export_template}
`)